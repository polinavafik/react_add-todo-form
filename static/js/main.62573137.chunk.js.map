{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","cn","TodoList","todos","map","getUserById","usersFromServer","find","getNewTodoId","Math","max","App","useState","setTitle","setUserId","todosFromServer","setTodos","newUser","hasError","setHasError","action","method","onSubmit","event","newTodo","preventDefault","currTodos","htmlFor","type","placeholder","value","onChange","target","curr","required","disabled","ReactDOM","render","document","getElementById"],"mappings":"qNAAe,GACb,CACEA,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,sBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,6BAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,4BAET,CACEH,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,2BAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,0BAET,CACEH,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,wBAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,2BAET,CACEH,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,0BAET,CACEH,GAAI,GACJC,KAAM,mDACNC,SAAU,WACVC,MAAO,2BCjEI,GACb,CACEH,GAAI,EACJI,MAAO,qBACPC,WAAW,EACXC,OAAQ,GAEV,CACEN,GAAI,GACJI,MAAO,kBACPC,WAAW,EACXC,OAAQ,GAEV,CACEN,GAAI,EACJI,MAAO,qCACPC,WAAW,EACXC,OAAQ,I,uBCXCC,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACvC,mBAAGC,UAAU,WAAWC,KAAI,wBAAYF,QAAZ,IAAYA,OAAZ,EAAYA,EAAML,OAA9C,gBACGK,QADH,IACGA,OADH,EACGA,EAAMP,QCAEU,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClCP,EAA2BO,EAA3BP,UAAWD,EAAgBQ,EAAhBR,MAAOI,EAASI,EAATJ,KAE1B,OACE,0BACE,UAASI,EAAKZ,GACdS,UAAWI,IACT,WACA,CAAE,sBAAuBR,IAJ7B,UAOE,oBAAII,UAAU,kBAAd,SAAiCL,IAEhCI,GAAS,cAAC,EAAD,CAAUA,KAAMA,QCdnBM,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvC,yBAASN,UAAU,WAAnB,SACGM,EAAMC,KAAI,SAAAJ,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKZ,UCHtC,SAASiB,EAAYX,GACnB,OAAOY,EAAgBC,MAAK,SAAAX,GAAI,OAAIA,EAAKR,KAAOM,MAC3C,KAUP,IAAMc,EAAe,SAACL,GACpB,OAAOM,KAAKC,IAAL,MAAAD,KAAI,YAAQN,EAAMC,KAAI,SAACJ,GAAD,OAAUA,EAAKZ,QAAO,GAGxCuB,EAAM,WACjB,MAA0BC,mBAAS,IAAnC,mBAAOpB,EAAP,KAAcqB,EAAd,KACA,EAA4BD,mBAAS,GAArC,mBAAOlB,EAAP,KAAeoB,EAAf,KACA,EAA0BF,mBAbnBG,EAAgBX,KAAI,SAAAJ,GAAI,kCAC1BA,GAD0B,IAE7BJ,KAAMS,EAAYL,EAAKN,cAWzB,mBAAOS,EAAP,KAAca,EAAd,KACA,EAAgCJ,mBAAS,CAAEpB,OAAO,EAAOyB,SAAS,IAAlE,mBAAOC,EAAP,KAAiBC,EAAjB,KAwCA,OACE,sBAAKtB,UAAU,MAAf,UACE,+CAEA,uBACEuB,OAAO,aACPC,OAAO,OACPC,SA/Be,SAACC,GAJR,IAACC,GAKbD,EAAME,iBAEDjC,GAAUE,IAPF8B,EAeP,CACJpC,GAAIoB,EAAaL,GACjBX,QACAC,WAAW,EACXG,KAAMS,EAAYX,IAlBpBsB,GAAS,SAAAU,GAAS,4BAAQA,GAAR,CAAmBF,OAoBrCX,EAAS,IACTC,EAAU,GACVK,GAAY,iBACV,CAAE3B,OAAO,EAAOyB,SAAS,OAhBzBE,GAAY,iBACV,CAAE3B,OAAQA,EAAOyB,SAAUvB,OAuB7B,UAKE,sBAAKG,UAAU,QAAf,UACE,wBAAO8B,QAAQ,SAAf,UACG,UACD,uBACEvC,GAAG,QACHwC,KAAK,OACL,UAAQ,aACRC,YAAY,gBACZC,MAAOtC,EACPuC,SAxDc,SAACR,GACzBV,EAASU,EAAMS,OAAOF,OACtBX,GAAY,SAACc,GAAD,mBAAC,eAAeA,GAAhB,IAAsBzC,OAAO,aAyDlC0B,EAAS1B,OACR,sBAAMK,UAAU,QAAhB,qCAIJ,sBAAKA,UAAU,QAAf,UACE,wBAAO8B,QAAQ,WAAf,UACG,SACD,yBACEvC,GAAG,UACH8C,UAAQ,EACRJ,MAAOpC,EACP,UAAQ,aACRqC,SAnEa,SAACR,GACxBT,GAAWS,EAAMS,OAAOF,OACxBX,GAAY,SAACc,GAAD,mBAAC,eAAeA,GAAhB,IAAsBhB,SAAS,QA4DnC,UAOE,wBAAQa,MAAM,IAAIK,UAAQ,EAA1B,2BACC7B,EAAgBF,KAAI,SAAAR,GAAI,OACvB,wBAAQkC,MAAOlC,EAAKR,GAApB,SACGQ,EAAKP,gBAKb6B,EAASD,SACR,sBAAMpB,UAAU,QAAhB,qCAIJ,wBAAQ+B,KAAK,SAAS,UAAQ,eAA9B,oBAKF,cAAC,EAAD,CAAUzB,MAAOA,QCtHvBiC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.62573137.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n  {\n    id: 11,\n    name: 'Шайлушай',\n    username: 'ShyLushy',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { User } from '../types/user';\n\ntype Props = {\n  user: User | null;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n    {user?.name}\n  </a>\n);\n","import cn from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../types/todo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const { completed, title, user } = todo;\n\n  return (\n    <article\n      data-id={todo.id}\n      className={cn(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && (<UserInfo user={user} />)}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../types/todo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","import './App.scss';\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './components/types/todo';\n\nfunction getUserById(userId: number) {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n\nfunction getTodos() {\n  return todosFromServer.map(todo => ({\n    ...todo,\n    user: getUserById(todo.userId),\n  }));\n}\n\nconst getNewTodoId = (todos: Todo[]): number => {\n  return Math.max(...todos.map((todo) => todo.id)) + 1;\n};\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [todos, setTodos] = useState<Todo[]>(getTodos());\n  const [hasError, setHasError] = useState({ title: false, newUser: false });\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasError((curr) => ({ ...curr, title: false }));\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasError((curr) => ({ ...curr, newUser: false }));\n  };\n\n  const onAdd = (newTodo: Todo) => {\n    setTodos(currTodos => [...currTodos, newTodo]);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!title || !userId) {\n      setHasError(() => (\n        { title: !title, newUser: !userId }\n      ));\n\n      return;\n    }\n\n    onAdd({\n      id: getNewTodoId(todos),\n      title,\n      completed: false,\n      user: getUserById(userId),\n    });\n    setTitle('');\n    setUserId(0);\n    setHasError(() => (\n      { title: false, newUser: false }\n    ));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"#title\">\n            {'Title: '}\n            <input\n              id=\"title\"\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleTitleChange}\n            />\n          </label>\n          {hasError.title && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"#user-id\">\n            {'User: '}\n            <select\n              id=\"user-id\"\n              required\n              value={userId}\n              data-cy=\"userSelect\"\n              onChange={handleUserChange}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map(user => (\n                <option value={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n          {hasError.newUser && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}